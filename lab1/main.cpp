#include <stdio.h> 
#include <iostream>
#include <cmath>
#include <climits>
#include <bitset>
#include <cstddef>
#include <string>
#include <iomanip>

using namespace std;


union Bit16
{
    void* checking;
    short* sht;
    unsigned short* usht;
};
// void showForTask3(string showName, int32_t num)
template<class T>
void showForTask3(string showName, T t)
{
    Bit16 s = {t};
	cout << ">>" << showName << ":\n";
// 	cout << "Unsigned hex: " << hex << (uint16_t)num << endl; //–±–µ–∑–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏
// 	cout << "Signed hex: " << hex << (int16_t)num << endl;    //–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏
// 	cout << "Binary x16:   " << bitset<16>(num) << endl;      //–±–µ–∑–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–≤–æ–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏; 
// 	//–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–≤–æ–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏;  ???????????
//  	cout << "Binary x16:   " << bitset<16>(num) << endl;      //–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–≤–æ–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏;  
//  	cout << "Unsigned dec: " << dec << (uint16_t)num << endl; //–±–µ–∑–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏;
// 	cout << "Signed dec:   " << dec << (int16_t)num << endl;  //–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏. 
    cout << "Unsigned hex: " << hex << *s.usht << endl; //–±–µ–∑–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏
    cout.unsetf(ios::hex);
	cout << "Signed hex: " << hex << *s.sht << endl;    //–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏
	cout.unsetf(ios::hex);
	cout << "Binary x16:   " << std::bitset<sizeof(*s.usht) * CHAR_BIT>(*s.usht) << endl;      //–±–µ–∑–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–≤–æ–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏; 
 	cout << "Binary x16:   " <<  std::bitset<sizeof(*s.sht) * CHAR_BIT>(*s.sht) << endl;      //–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–≤–æ–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏;  
 	cout << "Unsigned dec: " << dec <<*s.usht  << endl; //–±–µ–∑–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏;
	cout.unsetf(ios::dec);
	cout << "Signed dec:   " <<  dec << *s.sht  << endl; 
    cout.unsetf(ios::dec);
}


/*–ü—Ä–∏ –ø–æ–º–æ—â–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ sizeof —è–∑—ã–∫–∞ –°/–°++ –≤—ã—è—Å–Ω–∏—Ç–µ,
—Å–∫–æ–ª—å–∫–æ –±–∞–π—Ç–æ–≤ –∑–∞–Ω–∏–º–∞—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–µ–¥—É—é—â–∏—Ö —Ç–∏–ø–æ–≤ —è–∑—ã–∫–∞ –°/–°++: char,
signed char, unsigned char, wchar_t, short, unsigned short, int,
unsigned int, long, unsigned long, long long, unsigned long long,
float, double, long double, size_t, ptrdiff_t, void*, char*, int*,
unsigned int* –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.
–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑–º–µ—Ä—ã —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∏ —á–∏—Å–µ–ª —Å –ø–ª–∞–≤–∞—é—â–µ–π
–∑–∞–ø—è—Ç–æ–π. –ö–∞–∫–∏–µ –∏–∑ –Ω–∏—Ö –∏–º–µ—é—Ç —Ä–∞–∑—Ä—è–¥–Ω–æ—Å—Ç—å 16, 32, 64 –±–∏—Ç–∞, —É—á–∏—Ç—ã–≤–∞—è, —á—Ç–æ –±–∞–π—Ç
x86/x86-64 ‚Äî –æ–∫—Ç–µ—Ç (8 –±–∏—Ç)?
*/
template<typename T> 
void showForTask2(string typeName)
{
	cout << typeName << ":\t" << sizeof(T) << endl;
}

void task2()
{
	cout << endl << "---TASK 2---" << endl;
	showForTask2<char>("char");
	showForTask2<signed char>("signed char");
	showForTask2<unsigned char>("unsigned char");
	showForTask2<wchar_t>("wchar_t");
	showForTask2<short>("short");
	showForTask2<int>("int");
    showForTask2<unsigned int>("unsigned int");
	showForTask2<long>("long");
	showForTask2<unsigned long>("unsigned long");
	showForTask2<long long>("long long");
	showForTask2<unsigned long long>("unsigned long long");
	showForTask2<float>("float");
	showForTask2<double>("double");
	showForTask2<long double>("long double");
	showForTask2<size_t>("size_t");
	showForTask2<ptrdiff_t>("ptrdiff_t");
	showForTask2<void*>("void*");
	showForTask2<char*>("char*");
	showForTask2<int*>("int*");
	showForTask2<unsigned int*>("unsigned int*");
}

/*
–ò–∑—É—á–∏—Ç–µ, –∫–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç—Å—è –æ–¥–Ω–∞ –∏ —Ç–∞ –∂–µ –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏,
–µ—Å–ª–∏ –æ–Ω–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –∫–∞–∫ –∑–Ω–∞–∫–æ–≤–æ–µ –∏–ª–∏ –±–µ–∑–∑–Ω–∞–∫–æ–≤–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –∞ —Ç–∞–∫–∂–µ ‚Äî
–∫–∞–∫ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ —á–∏—Å–ª–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö —Å—á–∏—Å–ª–µ–Ω–∏—è.
–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞ —è–∑—ã–∫–µ C/C++ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é void ùëùùëüùëñùëõùë°16(void * ùëù),
–∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç –¥–ª—è 16-–±–∏—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –ø–∞–º—è—Ç–∏ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É ùëù:
–∞) —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—É—é –±–µ–∑–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏; 
–±) —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—É—é –±–µ–∑–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–≤–æ–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏; 
–≤) —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—É—é –±–µ–∑–∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏;
–≥) —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—É—é –∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏;
–¥) —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—É—é –∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–≤–æ–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏;
–µ) —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—É—é –∑–Ω–∞–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏. 
*/

void print16(int16_t x,int16_t y,int16_t z)
{
	cout << endl << "---TASK 3---" << endl;
	unsigned short minInt16UnS = 0;
	showForTask3("–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ 16-–±–∏—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–µ–∑ –∑–Ω–∞–∫–∞", &minInt16UnS);
	cout << endl;
	unsigned short maxInt16UnS = (unsigned short)USHRT_MAX;
	showForTask3("–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ 16-–±–∏—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–µ–∑ –∑–Ω–∞–∫–∞", &maxInt16UnS);
	cout << endl;
	short minInt16S = SHRT_MIN;
	showForTask3("–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ 16-–±–∏—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ –∑–Ω–∞–∫–æ–º", &minInt16S);
	cout << endl;
	short maxInt16S = SHRT_MAX;
	showForTask3("–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ 16-–±–∏—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ –∑–Ω–∞–∫–æ–º", &maxInt16S);
	cout << endl;
	showForTask3("X", &x);
	cout << endl;
	showForTask3("Y", &y);
	cout << endl;
	showForTask3("Z", &z);
}

int main()
{	
	task2();
	print16(0x8A8B8C8D,6,-3);

}

